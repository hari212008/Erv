#apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      role: nfs-server
#      app: nfs-server
  template:
    metadata:
      labels:
        role: nfs-server
#        app: nfs-server
    spec:
      containers:
      - name: nfs-server
        image: k8s.gcr.io/volume-nfs:0.8
        ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: /data
            name: nfs-server-volume
      volumes:
        - name: nfs-server-volume
          persistentVolumeClaim:
            claimName: nfs-server-volume
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-server
spec:
#  clusterIP: 10.160.0.0/12
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    role: nfs-server
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: nfs-server-volume
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: aws-efs
  mountOptions:
    - hard
    - nfsvers=4.1
    - rsize=1048576
    - wsize=1048576
    - timeo=600
    - retrans=2
  nfs:
    path: /data
    server: fs-6e8244a4.efs.eu-west-1.amazonaws.com
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nfs-server-volume
spec:
  storageClassName: aws-efs
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
